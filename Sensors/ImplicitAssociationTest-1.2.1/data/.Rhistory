library(plyr) #must import before dplyr
library(dplyr)
library(tidyr)
library(readr)
library(data.table)
setwd("/Users/Ian/Desktop/Experiment 2/Measures/data")
files <- list.files(pattern = "\\.csv$")
data_df <- tbl_df(rbind.fill(lapply(files, fread, header=TRUE)))
data_df <-
data_df %>%
rename(SCIAT1 = SCIAT1blocks.thisRepN, # RTs relevant to the SCIAT 1
SCIAT1_blocks = SCIAT1blocks.thisN, # current block
rt = requiredResponse.rt, # first correct response rt
accuracy = feedbackResponse.corr, # accuracy of the first response (currently reversed: 0 = correct)
SCIAT1trial = SCIAT1trials.thisN) %>% # Single item understanding of chinese characters, 0 or 1
mutate(accuracy = abs(accuracy - 1), # recitfies the direction of accuracy so that 0 = error and 1 = correct.
SCIAT1_blocks = SCIAT1_blocks + 1) # recifies block to be 1 to 7 rather than 0-6
SCIAT1_D1_df <-
data_df %>%
filter(SCIAT1 == 0) %>% # select only rows that corrispond to the SCIAT1 data
group_by(participant) %>%
filter(rt <= 10000) %>%
summarize(SCIAT1_mean_RT = round(mean(rt[SCIAT1_blocks == 2 | SCIAT1_blocks == 3])*1000, 0),
RT_block2_m = mean(rt[SCIAT1_blocks == 2]),
RT_block3_m = mean(rt[SCIAT1_blocks == 3]),
RT_block2and3_SD = sd(rt[SCIAT1_blocks == 2 | SCIAT1_blocks == 3])) %>%
mutate(difference = RT_block3_m - RT_block2_m,
SCIAT1_D1 = round(difference / RT_block2and3_SD, 2)) %>%
select(participant,
SCIAT1_mean_RT,
SCIAT1_D1)
SCIAT_condition_df <-
data_df %>%
filter(SCIAT1 == 0) %>% # select only rows that corrispond to the IAT data
group_by(participant) %>%
distinct(condition) %>%
rename(SCIAT_condition = condition) %>%
select(participant,
SCIAT_condition)
all_tasks_df <-
join_all(list(SCIAT_condition_df,
SCIAT1_D1_df),
by = "participant",
type = "full")
all_tasks_df <-
join_all(list(as.data.frame(SCIAT_condition_df),
as.data.frame(SCIAT1_D1_df)),
by = "participant",
type = "full")
output_df <-
all_tasks_df %>%
mutate(SCIAT1_D1 = ifelse(SCIAT_condition == 2, SCIAT1_D1 *-1, SCIAT1_D1))
View(output_df)
View(output_df)
rm(list=ls())
library(plyr) #must import before dplyr
library(dplyr)
library(tidyr)
library(readr)
library(data.table)
setwd("~/git/IAT/data")
files <- list.files(pattern = "\\.csv$")  # Create a list of the csv files in this folder
df <- tbl_df(rbind.fill(lapply(files, fread, header=TRUE)))
df <-
rename(df,
block = blocks.thisN, # current block
trial = trials.thisN, # trial order of presentation within each block
rt = requiredResponse.rt, # first correct response rt
accuracy = feedbackResponse.corr, # accuracy of the first response (currently reversed: 0 = correct)
trial = trials.thisN) %>% # trial by order of presentation within each block
mutate(accuracy = abs(accuracy - 1), # recitfies the direction of accuracy so that 0 = error and 1 = correct.
block = block + 1) # recifies block to be 1 to 7 rather than 0-6
demographics_data <-
select(df,
participant,
gender,
age,
expName,
date) %>%
distinct(participant)
D1_df <-
group_by(df, participant) %>%
filter(rt <= 10000) %>%
summarize(RT_block3_m = mean(rt[block == 3]),  # blocks 3 and 6
RT_block6_m = mean(rt[block == 6]),
RT_block3and6_SD = sd(rt[block == 3 | block == 6]),
RT_block4_m = mean(rt[block == 4]),  # blocks 4 and 7
RT_block7_m = mean(rt[block == 7]),
RT_block4and7_SD = sd(rt[block == 4 | block == 7])) %>%
mutate(difference_a = RT_block6_m - RT_block3_m,
D1a = difference_a / RT_block3and6_SD,
difference_b = RT_block7_m - RT_block4_m,
D1b = difference_b / RT_block4and7_SD,
IAT_D1 = round((D1a + D1b)/2, 2)) %>%
select(participant, IAT_D1)
D1_TT_df <-
group_by(df, participant, trial_type) %>%
filter(rt <= 10000) %>%
summarize(
# blocks 3 and 6
RT_block3_m = mean(rt[block == 3]),
RT_block6_m = mean(rt[block == 6]),
RT_block3and6_SD = sd(rt[block == 3 | block == 6]),
# blocks 4 and 7
RT_block4_m = mean(rt[block == 4]),
RT_block7_m = mean(rt[block == 7]),
RT_block4and7_SD = sd(rt[block == 4 | block == 7])
) %>%
mutate(difference_a = RT_block6_m - RT_block3_m,
D1a = difference_a / RT_block3and6_SD,
difference_b = RT_block7_m - RT_block4_m,
D1b = difference_b / RT_block4and7_SD,
IAT_D1 = round((D1a + D1b)/2, 2),
TT = trial_type) %>%
select(participant,
IAT_D1,
TT) %>%
spread(TT, IAT_D1) %>%
rename(IAT_D1_trial_type_1 = `1`,
IAT_D1_trial_type_2 = `2`,
IAT_D1_trial_type_3 = `3`,
IAT_D1_trial_type_4 = `4`)
accuracy_summary_df <-
group_by(df, participant) %>%
summarize(critical_blocks_percentage_accuracy = round(sum(accuracy[block == 3 |
block == 4 |
block == 6 |
block == 7]) / 120, 2)) # 120 critical trials in the IAT
df$fast_trial <- ifelse(df$rt < .3, 1, 0)  # add new column that records if RT < 300. Should probably be done using mutate() for code consistency, but this works fine.
latency_summary_df <-
group_by(df, participant) %>%
filter(block == 3 | block == 4 | block == 6 | block == 7) %>%
summarize(critical_blocks_mean_rt = round(mean(rt), 2),
percent_fast_trials = sum(fast_trial)/120) %>%  # 120 critical trials
mutate(exclude_based_on_fast_trials = ifelse(percent_fast_trials>=0.1, TRUE, FALSE)) %>%  # exclusions based on too many fast trials is part of the D1 algorithm
select(participant,
critical_blocks_mean_rt,
exclude_based_on_fast_trials)
all_tasks_df <-
join_all(list(demographics_data,
accuracy_summary_df,
latency_summary_df,
D1_df,
D1_TT_df),
by = "participant",
type = "full")
write.csv(all_tasks_df, file = '~/git/IAT/data processing/IAT_data.csv', row.names=FALSE)
?tidyverse
library(tidyverse)
?tidyverse
rm(list=ls())
library(plyr) #must import before dplyr
library(tidyverse)
library(data.table)
setwd("~/git/IAT/data")
files <- list.files(pattern = "\\.csv$")  # Create a list of the csv files in this folder
df <- tbl_df(rbind.fill(lapply(files, fread, header=TRUE)))
df <-
rename(df,
block = blocks.thisN, # current block
trial = trials.thisN, # trial order of presentation within each block
rt = requiredResponse.rt, # first correct response rt
accuracy = feedbackResponse.corr, # accuracy of the first response (currently reversed: 0 = correct)
trial = trials.thisN) %>% # trial by order of presentation within each block
mutate(accuracy = abs(accuracy - 1), # recitfies the direction of accuracy so that 0 = error and 1 = correct.
block = block + 1) # recifies block to be 1 to 7 rather than 0-6
demographics_data <-
select(df,
participant,
gender,
age,
expName,
date) %>%
distinct(participant)
D1_df <-
group_by(df, participant) %>%
filter(rt <= 10000) %>%
summarize(RT_block3_m = mean(rt[block == 3]),  # blocks 3 and 6
RT_block6_m = mean(rt[block == 6]),
RT_block3and6_SD = sd(rt[block == 3 | block == 6]),
RT_block4_m = mean(rt[block == 4]),  # blocks 4 and 7
RT_block7_m = mean(rt[block == 7]),
RT_block4and7_SD = sd(rt[block == 4 | block == 7])) %>%
mutate(difference_a = RT_block6_m - RT_block3_m,
D1a = difference_a / RT_block3and6_SD,
difference_b = RT_block7_m - RT_block4_m,
D1b = difference_b / RT_block4and7_SD,
IAT_D1 = round((D1a + D1b)/2, 2),
block_order = (participant - 1) %% 2 + 1, # set block order based on modulus of the participant code, as in the psychopy script
IAT_D1 = ifelse(block_order == 1, D1,  # D1 score rectifications for block order. if ==2, invert D1 score
ifelse(block_order == 2, D1 * -1, "error"))) %>%
select(participant, IAT_D1)
D1_df <-
group_by(df, participant) %>%
filter(rt <= 10000) %>%
summarize(RT_block3_m = mean(rt[block == 3]),  # blocks 3 and 6
RT_block6_m = mean(rt[block == 6]),
RT_block3and6_SD = sd(rt[block == 3 | block == 6]),
RT_block4_m = mean(rt[block == 4]),  # blocks 4 and 7
RT_block7_m = mean(rt[block == 7]),
RT_block4and7_SD = sd(rt[block == 4 | block == 7])) %>%
mutate(difference_a = RT_block6_m - RT_block3_m,
D1a = difference_a / RT_block3and6_SD,
difference_b = RT_block7_m - RT_block4_m,
D1b = difference_b / RT_block4and7_SD,
IAT_D1 = round((D1a + D1b)/2, 2),
block_order = (participant - 1) %% 2 + 1, # set block order based on modulus of the participant code, as in the psychopy script
IAT_D1 = ifelse(block_order == 1, IAT_D1,  # D1 score rectifications for block order. if ==2, invert D1 score
ifelse(block_order == 2, IAT_D1 * -1, "error"))) %>%
select(participant, IAT_D1)
accuracy_summary_df <-
group_by(df, participant) %>%
summarize(critical_blocks_percentage_accuracy = round(sum(accuracy[block == 3 |
block == 4 |
block == 6 |
block == 7]) / 120, 2)) # 120 critical trials in the IAT
df$fast_trial <- ifelse(df$rt < .3, 1, 0)  # add new column that records if RT < 300. Should probably be done using mutate() for code consistency, but this works fine.
latency_summary_df <-
group_by(df, participant) %>%
filter(block == 3 | block == 4 | block == 6 | block == 7) %>%
summarize(critical_blocks_mean_rt = round(mean(rt), 2),
percent_fast_trials = sum(fast_trial)/120) %>%  # 120 critical trials
mutate(exclude_based_on_fast_trials = ifelse(percent_fast_trials>=0.1, TRUE, FALSE)) %>%  # exclusions based on too many fast trials is part of the D1 algorithm
select(participant,
critical_blocks_mean_rt,
exclude_based_on_fast_trials)
all_tasks_df <-
join_all(list(demographics_data,
accuracy_summary_df,
latency_summary_df,
D1_df,
D1_TT_df),
by = "participant",
type = "full")
write.csv(all_tasks_df, file = '~/git/IAT/data processing/IAT_data.csv', row.names=FALSE)
all_tasks_df <-
join_all(list(demographics_data,
accuracy_summary_df,
latency_summary_df,
D1_df),
by = "participant",
type = "full")
write.csv(all_tasks_df, file = '~/git/IAT/data processing/IAT_data.csv', row.names=FALSE)
